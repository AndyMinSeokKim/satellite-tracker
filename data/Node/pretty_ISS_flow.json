[
    {
        "disabled": false,
        "id": "1db1ae9c.679261",
        "info": "",
        "label": "Flow 3",
        "type": "tab"
    },
    {
        "context": true,
        "default-endpoint": true,
        "empty-payload": false,
        "id": "39982cbc.63efa4",
        "inputLabels": [
            "msg.payload"
        ],
        "multiuser": false,
        "name": "ISS Assistant",
        "optout-learning": false,
        "service-endpoint": "https://gateway.watsonplatform.net/assistant/api",
        "timeout": "",
        "type": "watson-conversation-v1",
        "wires": [
            [
                "6e7aa286.28580c"
            ]
        ],
        "workspaceid": "bd8e312a-f39d-4c61-a3fa-cc942d98136a",
        "x": 510,
        "y": 80,
        "z": "1db1ae9c.679261"
    },
    {
        "func": "if (msg.payload.intents.length > 0 || msg.payload.entities.length >0){\n msg.payload = (new Date()).getTime()\n}\nreturn msg;",
        "id": "6e7aa286.28580c",
        "name": "Assistant to Satellite",
        "noerr": 0,
        "outputs": 1,
        "type": "function",
        "wires": [
            [
                "21c11bd8.f68594"
            ]
        ],
        "x": 720,
        "y": 80,
        "z": "1db1ae9c.679261"
    },
    {
        "id": "21c11bd8.f68594",
        "name": "scottda",
        "satid": "ISS (ZARYA)",
        "sattype": "stations",
        "type": "satellite",
        "wires": [
            [
                "aacce215.2df05"
            ]
        ],
        "x": 930,
        "y": 80,
        "z": "1db1ae9c.679261"
    },
    {
        "id": "9cf4fc9d.9da",
        "method": "post",
        "name": "",
        "swaggerDoc": "",
        "type": "http in",
        "upload": false,
        "url": "/botchat",
        "wires": [
            [
                "952fcec.876773"
            ]
        ],
        "x": 100,
        "y": 80,
        "z": "1db1ae9c.679261"
    },
    {
        "func": "// stash away incoming data\nmsg.mydata = {};\nmsg.mydata.messagein = msg.req.body.msgdata;\nmsg.payload = msg.mydata.messagein;\n\nmsg.params = { \"context\": msg.req.body.context};\n\nreturn msg;",
        "id": "952fcec.876773",
        "name": "process chat input",
        "noerr": 0,
        "outputs": 1,
        "type": "function",
        "wires": [
            [
                "39982cbc.63efa4"
            ]
        ],
        "x": 310,
        "y": 80,
        "z": "1db1ae9c.679261"
    },
    {
        "func": "\ncurrent_payload = msg.payload;\nmsg.payload = {};\nif (current_payload && !(current_payload.hasOwnProperty('error'))){\n    msg.payload.location = current_payload.display_name;\n    msg.payload.lat = current_payload.lat;\n    msg.payload.lon = current_payload.lon;\n   //msg.payload.location = \"foo\";\n   //payload.display_name\n    //msg.payload.lat = \"70\";\n    //msg.payload.lon = \"99\";\n} else {\n    msg.payload.location = \"unknown, probably over ocean\";\n    //msg.payload.location = msg.payload.name;\n\n    \n    var lat_string = msg.mydata.position.lat.toString();\n    msg.payload.lat = lat_string;\n    //msg.payload.lat = \"40\";\n    //msg.payload.lat = msg.mydata.position.lat;\n\n    var lon_string = msg.mydata.position.lon.toString();\n    msg.payload.lon = lon_string;\n    //msg.payload.lon = \"60\";\n    //msg.payload.lon = msg.mydata.position.lon;\n\n    \n}\n//msg.payload.botresponse = msg.mydata;\nreturn msg;\n",
        "id": "8b3db5c8.2a59f8",
        "name": "Assistant output to Chat",
        "noerr": 0,
        "outputs": 1,
        "type": "function",
        "wires": [
            [
                "c8cefb6c.0c9828"
            ]
        ],
        "x": 230,
        "y": 200,
        "z": "1db1ae9c.679261"
    },
    {
        "headers": {},
        "id": "c8cefb6c.0c9828",
        "name": "Bot response",
        "statusCode": "200",
        "type": "http response",
        "wires": [],
        "x": 460,
        "y": 200,
        "z": "1db1ae9c.679261"
    },
    {
        "id": "9e584b0b.80cb78",
        "method": "get",
        "name": "Chat home page",
        "swaggerDoc": "",
        "type": "http in",
        "upload": false,
        "url": "/bot",
        "wires": [
            [
                "77f20a41.43f8d4"
            ]
        ],
        "x": 100,
        "y": 360,
        "z": "1db1ae9c.679261"
    },
    {
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "id": "88f7a513.b64528",
        "name": "HTML",
        "output": "str",
        "syntax": "mustache",
        "template": "<!--\n# Copyright 2018 IBM\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n-->\n\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>\n\t  My BOT\n\t</title>\n\t<link rel=\"stylesheet\"\n        type=\"text/css\"\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" />\n\t<style>\n    \tbody {\n    \t    font-family: monospace;\n    \t}\n\t    .sat-track {\n\t        display: flex;\n\t        height: 100%;\n            font-family: monospace;\n\t    }\n\t    \n\t    .sat-track--chat {\n\t        width: 30%;\n\t        max-width: 400px;\n\t        border-right: 1px solid #929292;\n\t        display: flex;\n\t        flex-direction: column;\n\t    }\n\t    \n\t    .sat-track--chat--logs {\n\t        flex-grow: 1;\n\t        background-color: #262626;\n\t    }\n\t    \n\t    .sat-track--chat--message {\n            width: 100%;\n            margin-top: 12px;\n            display: flex;\n\t    }\n\t    \n\t    .sat-track--chat--message div {\n\t        border-radius: 6px;\n            width: 60%;\n            color: white;\n            padding: 6px 12px;\n\t    }\n\t    \n\t    .sat-track--chat--you div {\n\t        background-color: #4eb8ff;\n            margin-left: 6px;\n            border-bottom-left-radius: 0px;\n\t    }\n\t    \n\t    .sat-track--chat--bot,\n\t    .sat-track--chat--error {\n\t        flex-direction: row-reverse;\n\t    }\n\t    \n\t    .sat-track--chat--bot div,\n\t    .sat-track--chat--error div {\n\t        background-color: #97b83a;\n            margin-right: 6px;\n            border-bottom-right-radius: 0px;\n\t    }\n\t    \n\t    .sat-track--chat--error div {\n\t        background-color: #cc5f5f;\n\t    }\n\t    \n\t    .sat-track--chat form {\n\t        background-color: #141414;\n            margin-bottom: 0px;\n            color: white;\n\t    }\n\t    \n\t    .sat-track--chat label {\n\t        display: block;\n            padding: 6px;\n            margin-bottom: 0px;\n            border-bottom: 1px solid #434343;\n\t    }\n\t    \n\t    .sat-track--chat textarea {\n    \t    resize: none;\n            width: 100%;\n            min-height: 50px;\n            color: black;\n            padding: 6px;\n\t    }\n\t    \n\t    .sat-track--chat button {\n    \t    width: 100%;\n            padding: 6px 6px;\n            font-size: 12pt;\n            background: #268cb4;\n            border: 1px solid #02b8ff;\n            color: white;\n\t    }\n\t    \n\t    .sat-track--chat button:hover {\n\t        cursor: pointer;\n            background: #97b83a;\n            border: 1px solid #02b8ff;\n            color: white;\n\t    }\n\t    \n\t    h1 {\n\t        margin: 0px;\n            background-color: black;\n            color: #eee;\n            padding: 12px 6px;\n            font-size: 16pt;\n            border-bottom: 1px solid #00b8ff;\n\t    }\n\t    \n\t    .sat-track--map {\n\t        width: 100%;\n\t    }\n\t    \n\t    .sat-track--map iframe {\n\t        width: 100%;\n\t        height: 100%;\n\t    }\n\t    \n\t    .sat-track--map small {\n\t        position: absolute;\n            bottom: 0px;\n\t    }\n\t    \n\t</style>\n  </head>\n  <body>\n\n    <div class=\"container\">\n      <div id=\"no-script\"class=\"bg-info\">\n        This application needs JavaScript enabled in your browser!\n      </div>\n      <div id=\"id_contextdump\"></div>\n    </div>\n    \n    <div class=\"sat-track\">\n        <div class=\"sat-track--chat\">\n            <h1>ISS Tracker BOT</h1>\n            <div class=\"sat-track--chat--logs\" id=\"id_botchathistory\"></div>\n    \t    <div>\n    \t        <form>\n                  <label for=\"id_chattext\">Your Input: </label>\n                  <textarea type=\"text\" name=\"chattext\" id=\"id_chattext\"></textarea>\n    \t        </form>\n    \t        <button onclick=\"javascript:onChatClick()\" id=\"id_enter\">Send</button>\n    \t    </div>\n        </div>\n        <div class=\"sat-track--map\" id=\"WorldMap\">\n            <iframe width=\"800\" height=\"600\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\" src=\"https://casissatellite1.mybluemix.net/worldmap/\"></iframe>\n            <br /><small><a href=\"https://casissatellite1.mybluemix.net/worldmap/\" style=\"color:#0000FF;text-align:left\">View Larger Map</a></small>\n        </div>\n    </div>\n\t  \n    <script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-2.1.4.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n\n    <script>\n        $(document).ready(function() {\n            javascriptCheck();\n            $('#id_contextdump').hide();\n            enterbutton();\n            //invokeAjax (\"Hello\");\n        });\n        \n        // if javascript is enabled on the browser then can remove the warning message\n        function javascriptCheck() {\n            $('#no-script').remove();\n        }\n        \n        // creates div for interaction with bot      \n        function createNewDiv(who, message) {\n            var txt = who + ': ' + message;\n            var container;\n            if (who == 'You') {\n                container = $('<div class=\"sat-track--chat--message sat-track--chat--you\"></div>');\n            } else if (who == 'Error') {\n                container = $('<div class=\"sat-track--chat--message sat-track--chat--error\"></div>');\n            } else {\n                container = $('<div class=\"sat-track--chat--message sat-track--chat--bot\"></div>');\n            }\n            container.append($('<div></div>').text(txt))\n            return container;\n            \n        }\n        \n        // appends latest communication with bot to botchathistory\n        function chat(person, txt) {\n            $('#id_botchathistory').append(createNewDiv(person, txt));\n        }    \n        \n        // sets pressing of enter key to perform same action as send button\n        function enterbutton(){\n            $(function() {\n                $(\"form textarea\").keypress(function (e) {\n                if ((e.which && e.which == 13) || (e.keyCode && e.keyCode == 13)) {\n                     $('#id_enter').click();\n                     return false;\n                } else {\n                return true;\n                }\n             });\n            });\n        }\n        \n        // User has entered some text.\n        function onChatClick() {\n            var txt = $('#id_chattext').val();\n            chat('You', txt); \n            invokeAjax(txt);\n            $('#id_chattext').val('');\n        }\n        \n        function processOK(response) {\n            console.error(response);\n            \n           \n            chat('Bot', \"Location: \" + response.location);\n            chat('Bot', \"Latitude: \" + response.lat);\n            chat('Bot', \"Longitude: \" + response.lon);\n            $('#id_contextdump').data('convContext', response.botresponse.messageout.context);\n        }\n              \n        function processNotOK() {\n            chat('Error', 'Error whilst attempting to talk to Bot');\n        }\n              \n        function invokeAjax(message) {\n            var contextdata = $('#id_contextdump').data('convContext');\n            console.error('checking stashed context data');\n            console.error(contextdata);\n                \n            var ajaxData = {};\n            ajaxData.msgdata = message;\n            if (contextdata) {\n                ajaxData.context = contextdata;    \n            }\n        \n            $.ajax({\n                type: 'POST',\n                url: 'botchat',\n                data: ajaxData,\n                success: processOK,\n                error: processNotOK\n            });\n        }  \n    </script>\n  </body>\n</html>\n\n",
        "type": "template",
        "wires": [
            [
                "2391e54c.1b6c5a"
            ]
        ],
        "x": 430,
        "y": 360,
        "z": "1db1ae9c.679261"
    },
    {
        "headers": {},
        "id": "2391e54c.1b6c5a",
        "name": "Chat http response",
        "statusCode": "",
        "type": "http response",
        "wires": [],
        "x": 610,
        "y": 360,
        "z": "1db1ae9c.679261"
    },
    {
        "cluster": "",
        "id": "7534a205.c0ff7c",
        "lat": "scottda",
        "layer": "",
        "layers": "show",
        "lon": "",
        "maxage": "",
        "name": "",
        "panit": "false",
        "type": "worldmap",
        "usermenu": "show",
        "wires": [],
        "x": 870,
        "y": 540,
        "z": "1db1ae9c.679261",
        "zoom": ""
    },
    {
        "func": "msg.mydata = msg.payload;\n\nmsg.payload = {};\nmsg.payload.name = msg.mydata.timestamp;\nmsg.payload.lat = msg.mydata.position.lat;\nmsg.payload.lon = msg.mydata.position.lon;\nmsg.payload.layer = \"ISS\";\nmsg.payload.zoom = 15;\nmsg.payload.icon = \"satellite\";\n\nreturn msg;",
        "id": "db2addf0.b1889",
        "name": "ISS to map",
        "noerr": 0,
        "outputs": 1,
        "type": "function",
        "wires": [
            [
                "7534a205.c0ff7c",
                "3b6ed43a.5593ec",
                "5bdc667f.a55bb8"
            ]
        ],
        "x": 490,
        "y": 540,
        "z": "1db1ae9c.679261"
    },
    {
        "crontab": "",
        "id": "d7631af4.2c6eb8",
        "name": "",
        "once": true,
        "onceDelay": "0.1",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "topic": "",
        "type": "inject",
        "wires": [
            [
                "700b90e3.bc3e8"
            ]
        ],
        "x": 510,
        "y": 480,
        "z": "1db1ae9c.679261"
    },
    {
        "func": "msg.payload = {};\nmsg.payload.command = {};\n\nvar u = 'http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png';\nvar o = JSON.stringify({ maxZoom: 2, attribution: '&copy; OpenStreetMap'});\n\nmsg.payload.command.map = {name:\"OSMhot\", url:u, opt:o};\nmsg.payload.command.layer = \"OSMhot\";\n\nreturn msg;",
        "id": "700b90e3.bc3e8",
        "name": "add map layer",
        "noerr": 0,
        "outputs": 1,
        "type": "function",
        "wires": [
            [
                "7534a205.c0ff7c"
            ]
        ],
        "x": 680,
        "y": 480,
        "z": "1db1ae9c.679261"
    },
    {
        "func": "msg.payload = { command:{layer:\"Esri Terrain\",lat:msg.payload.lat,lon:msg.payload.lon,zoom:4} };\nreturn msg;",
        "id": "5bdc667f.a55bb8",
        "name": "move and zoom",
        "noerr": 0,
        "outputs": 1,
        "type": "function",
        "wires": [
            [
                "7534a205.c0ff7c"
            ]
        ],
        "x": 680,
        "y": 520,
        "z": "1db1ae9c.679261"
    },
    {
        "id": "74b39911.96c798",
        "name": "scottda",
        "satid": "ISS (ZARYA)",
        "sattype": "stations",
        "type": "satellite",
        "wires": [
            [
                "db2addf0.b1889"
            ]
        ],
        "x": 310,
        "y": 540,
        "z": "1db1ae9c.679261"
    },
    {
        "crontab": "",
        "id": "5183dc91.3ec154",
        "name": "60 second track",
        "once": true,
        "onceDelay": "0.1",
        "payload": "",
        "payloadType": "date",
        "repeat": "60",
        "topic": "Map4tracks",
        "type": "inject",
        "wires": [
            [
                "74b39911.96c798"
            ]
        ],
        "x": 130,
        "y": 540,
        "z": "1db1ae9c.679261"
    },
    {
        "depth": 20,
        "id": "3b6ed43a.5593ec",
        "name": "",
        "type": "worldmap-tracks",
        "wires": [
            [
                "7534a205.c0ff7c"
            ]
        ],
        "x": 670,
        "y": 580,
        "z": "1db1ae9c.679261"
    },
    {
        "func": "msg.mydata = msg.payload;\n//msg.payload = {};\n//msg.payload = {};\nmsg.lat =msg.payload.position.lat;\nmsg.lon =msg.payload.position.lon;\n\nreturn msg;\n//return [msg, msg];",
        "id": "3ddd665c.41e5da",
        "name": "iss to reverse geocode function`",
        "noerr": 0,
        "outputs": 1,
        "type": "function",
        "wires": [
            [
                "87a11301.5df95"
            ]
        ],
        "x": 250,
        "y": 140,
        "z": "1db1ae9c.679261"
    },
    {
        "id": "1d520ebd.fcb361",
        "method": "GET",
        "name": "Get reverse geocode",
        "ret": "txt",
        "tls": "",
        "type": "http request",
        "url": "https://us1.locationiq.org/v1/reverse.php?key={{{API_key}}}&lat={{{lat}}}&lon={{{lon}}}&format=json",
        "wires": [
            [
                "69bab8d5.008d58"
            ]
        ],
        "x": 680,
        "y": 140,
        "z": "1db1ae9c.679261"
    },
    {
        "action": "",
        "id": "69bab8d5.008d58",
        "name": "",
        "pretty": false,
        "property": "payload",
        "type": "json",
        "wires": [
            [
                "89a604c3.382188"
            ]
        ],
        "x": 850,
        "y": 140,
        "z": "1db1ae9c.679261"
    },
    {
        "field": "payload.script",
        "fieldType": "msg",
        "format": "handlebars",
        "id": "77f20a41.43f8d4",
        "name": "Chat page JS",
        "output": "str",
        "syntax": "mustache",
        "template": "$(document).ready(function() {\n    javascriptCheck();\n    $('#id_contextdump').hide();\n    enterbutton();\n    //invokeAjax (\"Hello\");\n});\n\n// if javascript is enabled on the browser then can remove the warning message\nfunction javascriptCheck() {\n    $('#no-script').remove();\n}\n\n// creates div for interaction with bot      \nfunction createNewDiv(who, message) {\n    var txt = who + ' : ' + message;\n    return $('<div></div>').text(txt);\n}\n\n// appends latest communication with bot to botchathistory\nfunction chat(person, txt) {\n    $('#id_botchathistory').append(createNewDiv(person, txt));\n}    \n\n// sets pressing of enter key to perform same action as send button\nfunction enterbutton(){\n    $(function() {\n        $(\"form input\").keypress(function (e) {\n        if ((e.which && e.which == 13) || (e.keyCode && e.keyCode == 13)) {\n             $('#id_enter').click();\n             return false;\n        } else {\n        return true;\n        }\n     });\n    });\n}\n\n// User has entered some text.\nfunction onChatClick() {\n    var txt = $('#id_chattext').val();\n    chat('You', txt); \n    invokeAjax(txt);\n    $('#id_chattext').val('');\n}\n\nfunction processOK(response) {\n    console.error(response);\n    \n   \n    chat('Bot', \"Location: \" + response.location);\n    chat('Bot', \"Latitude: \" + response.lat);\n    chat('Bot', \"Longitude: \" + response.lon);\n    $('#id_contextdump').data('convContext', response.botresponse.messageout.context);\n}\n      \nfunction processNotOK() {\n    chat('Error', 'Error whilst attempting to talk to Bot');\n}\n      \nfunction invokeAjax(message) {\n    \n    var contextdata = $('#id_contextdump').data('convContext');\n    console.error('checking stashed context data');\n    console.error(contextdata);\n  \n    var ajaxData = {};\n    ajaxData.msgdata = message;\n    if (contextdata) {\n        ajaxData.context = contextdata;   \n        node.error(contextdata);\n    }\n\n    $.ajax({\n        type: 'POST',\n        url: 'botchat',\n        data: ajaxData,\n        success: processOK,\n        error: processNotOK\n    });\n}",
        "type": "template",
        "wires": [
            [
                "88f7a513.b64528"
            ]
        ],
        "x": 280,
        "y": 360,
        "z": "1db1ae9c.679261"
    },
    {
        "id": "aacce215.2df05",
        "links": [
            "97caa8c0.719bd8"
        ],
        "name": "",
        "type": "link out",
        "wires": [],
        "x": 1055,
        "y": 80,
        "z": "1db1ae9c.679261"
    },
    {
        "id": "97caa8c0.719bd8",
        "links": [
            "aacce215.2df05"
        ],
        "name": "",
        "type": "link in",
        "wires": [
            [
                "3ddd665c.41e5da"
            ]
        ],
        "x": 75,
        "y": 140,
        "z": "1db1ae9c.679261"
    },
    {
        "id": "9328e2be.6706e",
        "info": "",
        "name": "Watson Assistant Chat API",
        "type": "comment",
        "wires": [],
        "x": 450,
        "y": 40,
        "z": "1db1ae9c.679261"
    },
    {
        "id": "c4ba60e7.a6509",
        "info": "",
        "name": "HTML UI",
        "type": "comment",
        "wires": [],
        "x": 420,
        "y": 300,
        "z": "1db1ae9c.679261"
    },
    {
        "id": "cda95729.0c6a18",
        "info": "",
        "name": "World Map UI",
        "type": "comment",
        "wires": [],
        "x": 330,
        "y": 480,
        "z": "1db1ae9c.679261"
    },
    {
        "id": "87a11301.5df95",
        "name": "Credentials",
        "props": [
            {
                "type": "msg",
                "value": "API_key"
            }
        ],
        "type": "credentials",
        "wires": [
            [
                "1d520ebd.fcb361"
            ]
        ],
        "x": 470,
        "y": 140,
        "z": "1db1ae9c.679261"
    },
    {
        "id": "c620a06d.65c05",
        "links": [
            "89a604c3.382188"
        ],
        "name": "",
        "type": "link in",
        "wires": [
            [
                "8b3db5c8.2a59f8"
            ]
        ],
        "x": 75,
        "y": 200,
        "z": "1db1ae9c.679261"
    },
    {
        "id": "89a604c3.382188",
        "links": [
            "c620a06d.65c05"
        ],
        "name": "",
        "type": "link out",
        "wires": [],
        "x": 995,
        "y": 140,
        "z": "1db1ae9c.679261"
    }
]
