    {
        "disabled": false,
        "id": "1057d6ef.7f6679",
        "info": "",
        "label": "Flow 3",
        "type": "tab"
    },
    {
        "context": true,
        "default-endpoint": true,
        "empty-payload": false,
        "id": "9803af66.40006",
        "inputLabels": [
            "msg.payload"
        ],
        "multiuser": false,
        "name": "ISS Assistant",
        "optout-learning": false,
        "service-endpoint": "https://gateway.watsonplatform.net/assistant/api",
        "timeout": "",
        "type": "watson-conversation-v1",
        "wires": [
            [
                "d70e450b.16a888"
            ]
        ],
        "workspaceid": "bd8e312a-f39d-4c61-a3fa-cc942d98136a",
        "x": 330,
        "y": 140,
        "z": "1057d6ef.7f6679"
    },
    {
        "func": "if (msg.payload.intents.length > 0 || msg.payload.entities.length >0){\n msg.payload = (new Date()).getTime()\n}\nreturn msg;",
        "id": "d70e450b.16a888",
        "name": "Assistant to Satellite",
        "noerr": 0,
        "outputs": 1,
        "type": "function",
        "wires": [
            [
                "9d255975.74a458"
            ]
        ],
        "x": 540,
        "y": 140,
        "z": "1057d6ef.7f6679"
    },
    {
        "id": "9d255975.74a458",
        "name": "scottda",
        "satid": "ISS (ZARYA)",
        "sattype": "stations",
        "type": "satellite",
        "wires": [
            [
                "a6ccee7c.a9241"
            ]
        ],
        "x": 750,
        "y": 140,
        "z": "1057d6ef.7f6679"
    },
    {
        "id": "fb234587.0f4fe8",
        "method": "post",
        "name": "",
        "swaggerDoc": "",
        "type": "http in",
        "upload": false,
        "url": "/botchat",
        "wires": [
            [
                "4ec847a7.47e188"
            ]
        ],
        "x": 140,
        "y": 40,
        "z": "1057d6ef.7f6679"
    },
    {
        "func": "// stash away incoming data\nmsg.mydata = {};\nmsg.mydata.messagein = msg.req.body.msgdata;\nmsg.payload = msg.mydata.messagein;\n\nmsg.params = { \"context\": msg.req.body.context};\n\nreturn msg;",
        "id": "4ec847a7.47e188",
        "name": "process chat input",
        "noerr": 0,
        "outputs": 1,
        "type": "function",
        "wires": [
            [
                "9803af66.40006"
            ]
        ],
        "x": 350,
        "y": 40,
        "z": "1057d6ef.7f6679"
    },
    {
        "func": "\ncurrent_payload = msg.payload;\n\nif (current_payload.hasOwnProperty('display_name')){\n    msg.payload.location = msg.payload.display_name;\n} else {\n    msg.payload.location = \"unknown, probably over ocean\";\n    \n    var lat_string = msg.payload.position.lat.toString();\n    msg.payload.lat = lat_string;\n    \n    var lon_string = msg.payload.position.lon.toString();\n    msg.payload.lon = lon_string;\n}\nmsg.payload.botresponse = msg.mydata;\nreturn msg;\n",
        "id": "dc353887.857ac8",
        "name": "Assistant output to Chat",
        "noerr": 0,
        "outputs": 1,
        "type": "function",
        "wires": [
            [
                "4c926b6d.43e884",
                "563ee7de.87d538"
            ]
        ],
        "x": 1910,
        "y": 80,
        "z": "1057d6ef.7f6679"
    },
    {
        "headers": {},
        "id": "563ee7de.87d538",
        "name": "Bot response",
        "statusCode": "",
        "type": "http response",
        "wires": [],
        "x": 2180,
        "y": 80,
        "z": "1057d6ef.7f6679"
    },
    {
        "id": "b3231e0c.61916",
        "method": "get",
        "name": "Chat home page",
        "swaggerDoc": "",
        "type": "http in",
        "upload": false,
        "url": "/bot",
        "wires": [
            [
                "f9cbda7e.b44478"
            ]
        ],
        "x": 100,
        "y": 240,
        "z": "1057d6ef.7f6679"
    },
    {
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "id": "7d67ccfe.b01bd4",
        "name": "HTML",
        "output": "str",
        "syntax": "mustache",
        "template": "<!--\n# Copyright 2018 IBM\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n-->\n\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>\n\t  My BOT\n\t</title>\n\t<link rel=\"stylesheet\"\n        type=\"text/css\"\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" />\n  </head>\n  <body>\n\n    <div class=\"container\">\n      <div id=\"no-script\"class=\"bg-info\">\n        This application needs JavaScript enabled in your browser!\n      </div>\n      <div id=\"id_contextdump\"></div>\n\n      <h1>My BOT</h1>\n      <div id=id_botchathistory>\n\t  </div>\n\t  \n\t  <div>\n\t      <form>\n            <label for=\"id_chattext\">Your Input: </label>\n            <input type=\"text\" name=\"chattext\" id=\"id_chattext\">\n            <br/><br/>\n\t      </form>\n\t      <button onclick=\"javascript:onChatClick()\" id=\"id_enter\">Send</button>\n\t  </div>\n    </div>\n    <div id=\"WorldMap\">\n        <iframe width=\"800\" height=\"600\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\" src=\"https://casissatellite1.mybluemix.net/worldmap/\"></iframe>\n        <br /><small><a href=\"https://casissatellite1.mybluemix.net/worldmap/\" style=\"color:#0000FF;text-align:left\">View Larger Map</a></small>\n    </div>\n    <script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-2.1.4.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n\n    <script>{{{payload.script}}}</script>\n  </body>\n</html>\n",
        "type": "template",
        "wires": [
            [
                "c174e6a5.494b58"
            ]
        ],
        "x": 490,
        "y": 240,
        "z": "1057d6ef.7f6679"
    },
    {
        "headers": {},
        "id": "c174e6a5.494b58",
        "name": "Chat http response",
        "statusCode": "",
        "type": "http response",
        "wires": [],
        "x": 690,
        "y": 240,
        "z": "1057d6ef.7f6679"
    },
    {
        "active": true,
        "complete": "payload",
        "console": false,
        "id": "4c926b6d.43e884",
        "name": "Fn Asst. Output",
        "tosidebar": true,
        "tostatus": false,
        "type": "debug",
        "wires": [],
        "x": 1960,
        "y": 20,
        "z": "1057d6ef.7f6679"
    },
    {
        "cluster": "",
        "id": "5561639f.aa601c",
        "lat": "scottda",
        "layer": "",
        "layers": "show",
        "lon": "",
        "maxage": "",
        "name": "",
        "panit": "false",
        "type": "worldmap",
        "usermenu": "show",
        "wires": [],
        "x": 1090,
        "y": 420,
        "z": "1057d6ef.7f6679",
        "zoom": ""
    },
    {
        "func": "msg.mydata = msg.payload;\n\nmsg.payload = {};\nmsg.payload.name = msg.mydata.timestamp;\nmsg.payload.lat = msg.mydata.position.lat;\nmsg.payload.lon = msg.mydata.position.lon;\nmsg.payload.layer = \"ISS\";\nmsg.payload.zoom = 15;\nmsg.payload.icon = \"satellite\";\n\nreturn msg;",
        "id": "348dcc8b.5d7c84",
        "name": "ISS to map",
        "noerr": 0,
        "outputs": 1,
        "type": "function",
        "wires": [
            [
                "5561639f.aa601c",
                "f338066c.ccb368",
                "7bd969e8.b50408"
            ]
        ],
        "x": 670,
        "y": 500,
        "z": "1057d6ef.7f6679"
    },
    {
        "crontab": "",
        "id": "2055ebd4.b871b4",
        "name": "",
        "once": true,
        "onceDelay": "0.1",
        "payload": "scottda",
        "payloadType": "str",
        "repeat": "",
        "topic": "",
        "type": "inject",
        "wires": [
            [
                "87e52741.79be48"
            ]
        ],
        "x": 680,
        "y": 380,
        "z": "1057d6ef.7f6679"
    },
    {
        "func": "msg.payload = {};\nmsg.payload.command = {};\n\nvar u = 'http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png';\nvar o = JSON.stringify({ maxZoom: 2, attribution: '&copy; OpenStreetMap'});\n\nmsg.payload.command.map = {name:\"OSMhot\", url:u, opt:o};\nmsg.payload.command.layer = \"OSMhot\";\n\nreturn msg;",
        "id": "87e52741.79be48",
        "name": "add map layer",
        "noerr": 0,
        "outputs": 1,
        "type": "function",
        "wires": [
            [
                "5561639f.aa601c"
            ]
        ],
        "x": 860,
        "y": 380,
        "z": "1057d6ef.7f6679"
    },
    {
        "func": "msg.payload = { command:{layer:\"Esri Terrain\",lat:msg.payload.lat,lon:msg.payload.lon,zoom:4} };\nreturn msg;",
        "id": "7bd969e8.b50408",
        "name": "move and zoom",
        "noerr": 0,
        "outputs": 1,
        "type": "function",
        "wires": [
            [
                "5561639f.aa601c"
            ]
        ],
        "x": 840,
        "y": 420,
        "z": "1057d6ef.7f6679"
    },
    {
        "id": "a4f1353b.2ff658",
        "name": "scottda",
        "satid": "ISS (ZARYA)",
        "sattype": "stations",
        "type": "satellite",
        "wires": [
            [
                "348dcc8b.5d7c84"
            ]
        ],
        "x": 490,
        "y": 500,
        "z": "1057d6ef.7f6679"
    },
    {
        "crontab": "",
        "id": "814693ec.82ac1",
        "name": "60 second track",
        "once": true,
        "onceDelay": "0.1",
        "payload": "",
        "payloadType": "date",
        "repeat": "60",
        "topic": "Map4tracks",
        "type": "inject",
        "wires": [
            [
                "a4f1353b.2ff658"
            ]
        ],
        "x": 290,
        "y": 500,
        "z": "1057d6ef.7f6679"
    },
    {
        "depth": 20,
        "id": "f338066c.ccb368",
        "name": "",
        "type": "worldmap-tracks",
        "wires": [
            [
                "5561639f.aa601c"
            ]
        ],
        "x": 870,
        "y": 500,
        "z": "1057d6ef.7f6679"
    },
    {
        "func": "//msg.mydata = msg.payload;\n//msg.payload = {};\n//msg.payload = {};\nmsg.lat =msg.payload.position.lat;\nmsg.lon =msg.payload.position.lon;\n\nreturn [msg, msg];",
        "id": "a6ccee7c.a9241",
        "name": "iss to reverse geocode function`",
        "noerr": 0,
        "outputs": 2,
        "type": "function",
        "wires": [
            [
                "97247d6d.13694"
            ],
            [
                "f9515ef1.0e8dd"
            ]
        ],
        "x": 1010,
        "y": 140,
        "z": "1057d6ef.7f6679"
    },
    {
        "id": "f9515ef1.0e8dd",
        "method": "GET",
        "name": "Get reverse geocode",
        "ret": "txt",
        "tls": "",
        "type": "http request",
        "url": "https://us1.locationiq.org/v1/reverse.php?key=91eac0347bf2a6&lat={{{lat}}}&lon={{{lon}}}&format=json",
        "wires": [
            [
                "9e5942ae.4a018",
                "c69656f4.75c188"
            ]
        ],
        "x": 1280,
        "y": 200,
        "z": "1057d6ef.7f6679"
    },
    {
        "active": false,
        "complete": "payload",
        "console": false,
        "id": "9e5942ae.4a018",
        "name": "http request to locationIQ",
        "tosidebar": true,
        "tostatus": false,
        "type": "debug",
        "wires": [],
        "x": 1370,
        "y": 280,
        "z": "1057d6ef.7f6679"
    },
    {
        "accumulate": false,
        "build": "array",
        "count": "2",
        "id": "97247d6d.13694",
        "joiner": "\\n",
        "joinerType": "str",
        "key": "topic",
        "mode": "custom",
        "name": "join",
        "property": "payload",
        "propertyType": "msg",
        "reduceExp": "",
        "reduceFixup": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceRight": false,
        "timeout": "",
        "type": "join",
        "wires": [
            [
                "e59fa23c.bcc68",
                "767640db.9766d"
            ]
        ],
        "x": 1470,
        "y": 100,
        "z": "1057d6ef.7f6679"
    },
    {
        "active": false,
        "complete": "payload",
        "console": false,
        "id": "767640db.9766d",
        "name": "join OUTPUT",
        "tosidebar": true,
        "tostatus": false,
        "type": "debug",
        "wires": [],
        "x": 1490,
        "y": 40,
        "z": "1057d6ef.7f6679"
    },
    {
        "action": "",
        "id": "c69656f4.75c188",
        "name": "",
        "pretty": false,
        "property": "payload",
        "type": "json",
        "wires": [
            [
                "97247d6d.13694"
            ]
        ],
        "x": 1450,
        "y": 200,
        "z": "1057d6ef.7f6679"
    },
    {
        "func": "\n\nif(msg.payload[1] && msg.payload[1].hasOwnProperty('error')){\n    msg.payload = msg.payload[0];\n} else {\n    msg.payload = msg.payload[1];\n}\n\nreturn msg;\n",
        "id": "e59fa23c.bcc68",
        "name": "choose retval",
        "noerr": 0,
        "outputs": 1,
        "type": "function",
        "wires": [
            [
                "b179b1a5.6c1e7",
                "dc353887.857ac8"
            ]
        ],
        "x": 1660,
        "y": 100,
        "z": "1057d6ef.7f6679"
    },
    {
        "active": true,
        "complete": "payload",
        "console": false,
        "id": "b179b1a5.6c1e7",
        "name": "choose retval OUTPUT",
        "tosidebar": true,
        "tostatus": false,
        "type": "debug",
        "wires": [],
        "x": 1770,
        "y": 180,
        "z": "1057d6ef.7f6679"
    },
    {
        "field": "payload.script",
        "fieldType": "msg",
        "format": "handlebars",
        "id": "f9cbda7e.b44478",
        "name": "Chat page JS",
        "output": "str",
        "syntax": "mustache",
        "template": "$(document).ready(function() {\n    javascriptCheck();\n    $('#id_contextdump').hide();\n    enterbutton();\n    //invokeAjax (\"Hello\");\n});\n\n// if javascript is enabled on the browser then can remove the warning message\nfunction javascriptCheck() {\n    $('#no-script').remove();\n}\n\n// creates div for interaction with bot      \nfunction createNewDiv(who, message) {\n    var txt = who + ' : ' + message;\n    return $('<div></div>').text(txt);\n}\n\n// appends latest communication with bot to botchathistory\nfunction chat(person, txt) {\n    $('#id_botchathistory').append(createNewDiv(person, txt));\n}    \n\n// sets pressing of enter key to perform same action as send button\nfunction enterbutton(){\n    $(function() {\n        $(\"form input\").keypress(function (e) {\n        if ((e.which && e.which == 13) || (e.keyCode && e.keyCode == 13)) {\n             $('#id_enter').click();\n             return false;\n        } else {\n        return true;\n        }\n     });\n    });\n}\n\n// User has entered some text.\nfunction onChatClick() {\n    var txt = $('#id_chattext').val();\n    chat('You', txt); \n    invokeAjax(txt);\n    $('#id_chattext').val('');\n}\n\nfunction processOK(response) {\n    console.error(response);\n    \n   \n    chat('Bot', \"Location: \" + response.location);\n    chat('Bot', \"Latitude: \" + response.lat);\n    chat('Bot', \"Longitude: \" + response.lon);\n    $('#id_contextdump').data('convContext', response.botresponse.messageout.context);\n}\n      \nfunction processNotOK() {\n    chat('Error', 'Error whilst attempting to talk to Bot');\n}\n      \nfunction invokeAjax(message) {\n    var contextdata = $('#id_contextdump').data('convContext');\n    console.error('checking stashed context data');\n    console.error(contextdata);\n        \n    var ajaxData = {};\n    ajaxData.msgdata = message;\n    if (contextdata) {\n        ajaxData.context = contextdata;    \n    }\n\n    $.ajax({\n        type: 'POST',\n        url: 'botchat',\n        data: ajaxData,\n        success: processOK,\n        error: processNotOK\n    });\n}",
        "type": "template",
        "wires": [
            [
                "7d67ccfe.b01bd4"
            ]
        ],
        "x": 300,
        "y": 240,
        "z": "1057d6ef.7f6679"
    }
]
